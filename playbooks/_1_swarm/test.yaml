---



- debug: var=groups.control_main

- debug: var=hostvars['control01']['ansible_os_family']
- debug: var=hostvars[groups.control_main[0]]['ansible_default_ipv4']['address']

- debug: var=ansible_all_ipv4_addresses
- debug: var=ansible_default_ipv4.address

- debug: var=inventory_hostname

#
#- name: dns_names
#  set_fact:
#    dns_names: "{{ groups.control_all | map('regex_replace', '^(.*)$', 'DNS:\\1-etcd') | join(',') }}"
#
#- name: Print dns_names
#  ansible.builtin.debug:
#    msg: "{{ dns_names }}"
#
#
#- name: Cert config for etcd and peers
#  set_fact:
#    cert_servers_conf_list: |
#      {{ cert_servers_conf_list|default([]) + [
#        { "path":"/etc/ssl/etcd/","name":loop_hostname,
#          "key_usage":["digitalSignature"],"extended_key_usage":["serverAuth","clientAuth"],
#          "subject_alt_name":"IP:127.0.0.1,IP:192.168.2.2," + dns_names + ",DNS:balancer"
#        },
#        { "path": "/etc/ssl/etcd/","name": (loop_hostname+"-peer"),
#          "key_usage": [ "digitalSignature" ],"extended_key_usage": [ "serverAuth","clientAuth" ],
#          "subject_alt_name": "IP:127.0.0.1,IP:192.168.2.2," + dns_names + ",DNS:balancer"
#        }]
#      }}
#  loop: "{{ groups.control_all }}"
#  loop_control:
#    label: "{{ loop_hostname }}"
#    loop_var: loop_hostname
#
#- name: Add client and balancer certs configs
#  set_fact:
#    cert_all_conf_list: |
#      {{ cert_servers_conf_list|default([]) + [
#        { "path":"/etc/ssl/etcd/","name":"client",
#          "key_usage":[ "keyEncipherment","dataEncipherment" ],"extended_key_usage":["clientAuth"],
#          "subject_alt_name":""
#        },
#        { "path": "/etc/ssl/balancer/","name": "balancer",
#          "key_usage": [ "digitalSignature" ],"extended_key_usage": [ "serverAuth","clientAuth" ],
#          "subject_alt_name": "IP:127.0.0.1,IP:192.168.2.2," + dns_names + ",DNS:balancer"
#        }]
#      }}
#
#- name: ---
#  ansible.builtin.include_tasks: /source/playbooks/library/create_CA.yaml
#  vars:
#    ca: { "path":"/etc/ssl/etcd/","name":"ca_etcd" }
#    list: "{{ cert_all_conf_list }}"
#    renew: false


#- name: other_list
#  set_fact:
#    item_cert: "{{ file | community.general.json_query('results[*].stat.exists') }}"
#
#- name: Print other_list
#  ansible.builtin.debug:
#    msg: "{{ other_list }}"
#
#- name: other list
#  set_fact:
#    item_cert: "{{ [servers_list, other_list] | community.general.lists_mergeby('name') }}"