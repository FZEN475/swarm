---
- name: dns_names
  set_fact:
    dns_names: "{{ groups.control_all | map('regex_replace', '^(.*)$', 'DNS:\\1-etcd') | join(',') }}"

- name: Print dns_names
  ansible.builtin.debug:
    msg: "{{ dns_names }}"


- name: servers_list
  set_fact:
    servers_list: "{{ servers_list|default([]) + [{ \"path\":\"/etc/ssl/etcd/\",\"name\":loop_hostname}] }}"
  loop: "{{ groups.control_all }}"
  loop_control:
    label: "{{ loop_hostname }}"
    loop_var: loop_hostname

#- name: servers_list
#  set_fact:
#    servers_list: |
#      {{ servers_list|default([]) + [
#        { "path":"/etc/ssl/etcd/","name":"loop_hostname",
#          "key_usage":[digitalSignature],"extended_key_usage":[serverAuth,clientAuth],
#          "subject_alt_name":'IP:127.0.0.1,IP:192.168.2.2,IP:192.168.2.10,,DNS:balancer'},
#        { "path": "/etc/ssl/etcd/","name": "{{loop_hostname}}-peer",
#          "key_usage": [ digitalSignature ],"extended_key_usage": [ serverAuth,clientAuth ],
#          "subject_alt_name": 'IP:127.0.0.1,IP:192.168.2.2,IP:192.168.2.10,{{ groups.control_all |
#              map("regex_replace", "^(.*)$", "DNS:\1-etcd") | join(",") }},DNS:balancer' }
#  loop: "{{ groups.control_all }}"
#  loop_control:
#    label: "{{ loop_hostname }}"
#    loop_var: loop_hostname

- name: Print servers_list
  ansible.builtin.debug:
    msg: "{{ servers_list }}"


#- name: other_list
#  set_fact:
#    item_cert: "{{ file | community.general.json_query('results[*].stat.exists') }}"
#
#- name: Print other_list
#  ansible.builtin.debug:
#    msg: "{{ other_list }}"
#
#- name: other list
#  set_fact:
#    item_cert: "{{ [servers_list, other_list] | community.general.lists_mergeby('name') }}"