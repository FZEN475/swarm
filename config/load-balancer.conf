events {
    worker_connections 1024;
}
http {
   upstream backend {
      server control01-etcd:2379;
      server control02-etcd:2379;
      server control03-etcd:2379;
   }

   # This server accepts all traffic to port 80 and passes it to the upstream.
   # Notice that the upstream name and the proxy_pass need to match.

   server {
      listen 2381 ssl;
      http2 on;
      ssl_certificate /etc/ssl/certs/balancer.pem;
      ssl_certificate_key /etc/ssl/certs/balancer-key.pem;
#      ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
      grpc_socket_keepalive on;

      location / {
          grpc_pass grpcs://backend;
          grpc_ssl_verify on;
          grpc_ssl_server_name on;
          grpc_ssl_name balancer;
          grpc_ssl_trusted_certificate /etc/ssl/certs/ca_etcd.pem;
          grpc_ssl_certificate /etc/ssl/certs/client.pem;
          grpc_ssl_certificate_key /etc/ssl/certs/client-key.pem;
      }
   }
}

stream {

  upstream k8s_servers{
    hash   $remote_addr consistent;
    server 192.168.2.10:6443;
    server 192.168.2.11:6443;
    server 192.168.2.12:6443;
  }

  server {
    listen 6444;
    proxy_pass k8s_servers;
  }
}